;
; File generated by cc65 v 2.19 - Git 5c3ff71
;
	.fopt		compiler,"cc65 v 2.19 - Git 5c3ff71"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		__set_sprite_attribute
	.export		_bmx_header
	.export		_bmx_bit_depth
	.export		_bmx_vera_bit_depth
	.export		_bmx_width
	.export		_bmx_height
	.export		_bmx_no_pals
	.export		_bmx_pal_start
	.export		_bmx_data_start
	.import		__x_axis
	.import		__y_axis
	.import		__canvas_scale
	.import		__canvas_pow_scale
	.import		__canvas_paint_offset
	.import		__canvas_paint_width
	.import		__display_width
	.import		__display_height
	.import		__sprite_vram_size
	.import		__sprite_size
	.import		__display_row_pow
	.import		__display_has_columns
	.export		_init_canvas_vera_sprites
	.export		_x_axis
	.export		_y_axis
	.export		_scale
	.export		_get_axis_scale

.segment	"DATA"

_bmx_header:
	.word	$0400
_bmx_bit_depth:
	.word	$0404
_bmx_vera_bit_depth:
	.word	$0405
_bmx_width:
	.word	$0406
_bmx_height:
	.word	$0408
_bmx_no_pals:
	.word	$040a
_bmx_pal_start:
	.word	$040b
_bmx_data_start:
	.word	$040c
_x_axis:
	.byte	$00
_y_axis:
	.byte	$00
_scale:
	.byte	$00

; ---------------------------------------------------------------
; void __near__ init_canvas_vera_sprites (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_init_canvas_vera_sprites: near

.segment	"CODE"

	ldx     #$06
	lda     #$00
	jsr     pushax
	jsr     pusha
	stz     __canvas_scale
	stz     __canvas_pow_scale
	stz     __canvas_paint_offset
	stz     __display_has_columns
	lda     _bmx_width
	ldx     _bmx_width+1
	jsr     ldaxi
	jsr     _get_axis_scale
	sta     __x_axis
	lda     _bmx_height
	ldx     _bmx_height+1
	jsr     ldaxi
	jsr     _get_axis_scale
	sta     __y_axis
	sta     __canvas_pow_scale
	lda     __x_axis
	cmp     __canvas_pow_scale
	bcc     L0002
	sta     __canvas_pow_scale
	lda     _bmx_width
	ldx     _bmx_width+1
	jsr     ldaxi
	jsr     shrax1
	sta     __canvas_paint_offset
	lda     _bmx_width
	ldx     _bmx_width+1
	jsr     ldaxi
	jsr     shrax1
	bra     L0012
L0002:	lda     _bmx_width+1
	sta     ptr1+1
	lda     _bmx_width
	sta     ptr1
	lda     (ptr1)
L0012:	sta     __canvas_paint_width
	lda     #$04
	sec
	sbc     __canvas_pow_scale
	sta     __canvas_scale
	tay
	lda     #$01
	ldx     #$00
	jsr     aslaxy
	sta     __canvas_scale
	lda     __x_axis
	cmp     __y_axis
	bne     L0014
	ldx     #$10
	stz     __sprite_size
	stx     __sprite_size+1
	lda     #$0F
	sta     (sp)
	lda     #$04
	sec
	sbc     __canvas_pow_scale
	clc
	adc     #$06
	sta     __display_row_pow
	jmp     L000B
L0014:	lda     __x_axis
	cmp     __y_axis
	jcs     L001B
	lda     __canvas_scale
	jsr     pusha0
	lda     _bmx_width
	ldx     _bmx_width+1
	jsr     ldaxi
	jsr     tosumulax
	jsr     pusha
	ldx     #$00
	lda     (sp)
	jsr     shlax4
	jsr     shlax2
	sta     __sprite_size
	stx     __sprite_size+1
	lda     #$0C
	ldy     #$01
	sta     (sp),y
	lda     #$04
	sec
	sbc     __canvas_pow_scale
	sta     __display_row_pow
	lda     (sp)
	cmp     #$08
	bne     L0016
	lda     #$03
	clc
	adc     __display_row_pow
	sta     __display_row_pow
L0016:	lda     (sp)
	cmp     #$10
	bne     L0018
	ldy     #$01
	lda     (sp),y
	ora     #$01
	sta     (sp),y
	lda     #$04
	clc
	adc     __display_row_pow
	sta     __display_row_pow
L0018:	lda     (sp)
	cmp     #$20
	bne     L001A
	ldy     #$01
	lda     (sp),y
	ora     #$02
	sta     (sp),y
	lda     #$05
	clc
	adc     __display_row_pow
	sta     __display_row_pow
L001A:	lda     (sp)
	cmp     #$40
	bne     L000E
	ldy     #$01
	lda     (sp),y
	ora     #$03
	sta     (sp),y
	lda     #$06
	clc
	adc     __display_row_pow
	sta     __display_row_pow
	bra     L000E
L001B:	lda     __canvas_scale
	jsr     pusha0
	lda     _bmx_height
	ldx     _bmx_height+1
	jsr     ldaxi
	jsr     tosumulax
	jsr     pusha
	ldx     #$00
	lda     (sp)
	jsr     shlax4
	jsr     shlax2
	sta     __sprite_size
	stx     __sprite_size+1
	lda     #$03
	ldy     #$01
	sta     (sp),y
	ina
	sec
	sbc     __canvas_pow_scale
	clc
	adc     #$06
	sta     __display_row_pow
	lda     (sp)
	cmp     #$10
	bne     L001D
	ldy     #$01
	lda     (sp),y
	ora     #$04
	sta     (sp),y
L001D:	lda     (sp)
	cmp     #$20
	bne     L001F
	ldy     #$01
	lda     (sp),y
	ora     #$08
	sta     (sp),y
L001F:	lda     (sp)
	cmp     #$40
	bne     L000E
	ldy     #$01
	lda     (sp),y
	ora     #$0C
	sta     (sp),y
L000E:	jsr     incsp1
L000B:	lda     __sprite_size
	ldx     __sprite_size+1
	jsr     shrax4
	jsr     shrax1
	sta     __sprite_vram_size
	stx     __sprite_vram_size+1
	lda     #$03
	clc
	adc     __x_axis
	sta     __x_axis
	lda     #$03
	clc
	adc     __y_axis
	sta     __y_axis
	lda     _bmx_width
	ldx     _bmx_width+1
	jsr     pushw
	lda     __canvas_scale
	jsr     tosumula0
	sta     __display_width
	lda     _bmx_height
	ldx     _bmx_height+1
	jsr     pushw
	lda     __canvas_scale
	jsr     tosumula0
	sta     __display_height
	lda     #$01
	jsr     pusha
	ldy     #$05
	jsr     pushwysp
	lda     #$01
	jsr     pusha
	lda     #$60
	jsr     pusha0
	lda     #$28
	jsr     pusha0
	lda     #$0C
	jsr     pusha
	ldy     #$09
	lda     (sp),y
	jsr     pusha
	lda     #$00
	jsr     __set_sprite_attribute
	lda     __sprite_vram_size
	ldx     __sprite_vram_size+1
	ldy     #$01
	jsr     addeqysp
	lda     __x_axis
	cmp     __y_axis
	beq     L0020
	bcs     L0021
L0020:	lda     #$02
	jsr     pusha
	ldy     #$05
	jsr     pushwysp
	lda     #$01
	jsr     pusha
	lda     #$60
	jsr     pusha0
	lda     #$68
	jsr     pusha0
	lda     #$0C
	jsr     pusha
	ldy     #$09
	lda     (sp),y
	jsr     pusha
	lda     #$00
	jsr     __set_sprite_attribute
	lda     __sprite_vram_size
	ldx     __sprite_vram_size+1
	ldy     #$01
	jsr     addeqysp
	lda     #$FF
	sta     __display_has_columns
L0021:	lda     __canvas_paint_offset
	beq     L0011
	lda     #$03
	jsr     pusha
	ldy     #$05
	jsr     pushwysp
	lda     #$01
	jsr     pusha
	lda     #$A0
	jsr     pusha0
	lda     #$28
	jsr     pusha0
	lda     #$0C
	jsr     pusha
	ldy     #$09
	lda     (sp),y
	jsr     pusha
	lda     #$00
	jsr     __set_sprite_attribute
	lda     __sprite_vram_size
	ldx     __sprite_vram_size+1
	ldy     #$01
	jsr     addeqysp
	lda     __display_has_columns
	beq     L0011
	lda     #$04
	jsr     pusha
	ldy     #$05
	jsr     pushwysp
	lda     #$01
	jsr     pusha
	lda     #$A0
	jsr     pusha0
	lda     #$68
	jsr     pusha0
	lda     #$0C
	jsr     pusha
	ldy     #$09
	lda     (sp),y
	jsr     pusha
	lda     #$00
	jsr     __set_sprite_attribute
	lda     __sprite_vram_size
	ldx     __sprite_vram_size+1
	ldy     #$01
	jsr     addeqysp
L0011:	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ get_axis_scale (unsigned int size)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_get_axis_scale: near

.segment	"CODE"

	jsr     pushax
	lda     #$00
	jsr     pusha
	ldy     #$02
	jsr     ldaxysp
	jsr     shrax4
	bra     L0007
L0002:	clc
	lda     #$01
	adc     (sp)
	sta     (sp)
	ldy     #$02
	jsr     ldaxysp
	jsr     shrax1
L0007:	ldy     #$01
	jsr     staxysp
	ldy     #$01
	lda     (sp),y
	iny
	ora     (sp),y
	bne     L0002
	tax
	lda     (sp)
	jmp     incsp3

.endproc

