;
; File generated by cc65 v 2.19 - Git 5c3ff71
;
	.fopt		compiler,"cc65 v 2.19 - Git 5c3ff71"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		__set_sprite_attribute
	.import		__set_sprite_address
	.export		_draw_pixel_to_sprite
	.export		_draw_pixel_line
	.export		_tool_handler
	.export		_set_pal_icon_sprites
	.import		__primary_colour
	.import		__secondary_colour
	.import		__current_tool
	.import		_bmx_width
	.import		_bmx_height
	.import		_bmx_no_pals
	.import		__canvas_pow_scale
	.import		__draw_canvas_to_screen
	.import		__draw_row_to_sprite
	.import		__get_pixel
	.import		_add_history_node_position
	.import		_add_new_history_node
	.import		__mouse_data
	.import		_keycode
	.import		_draw_brush_to_sprite
	.export		_draw_pixel_line_h
	.export		_draw_pixel_line_v
	.export		_mouse_addrs
	.export		_was_drawing_last_frame
	.export		_old_pix_x
	.export		_old_pix_y
	.export		_old_button
	.export		_brush_type
	.export		_brush_size
	.export		_fill_offset_arr_x
	.export		_fill_offset_arr_y
	.export		_flood_fill_queue_x
	.export		_flood_fill_queue_y
	.export		_queue_length
	.export		_selection_colour
	.export		_fill_colour
	.export		_abort_flood_fill
	.export		_flood_fill_pixel
	.export		_flood_fill
	.export		_line_brush_size
	.export		_line_brush_type
	.export		_point_selected
	.export		_previous_point_x
	.export		_previous_point_y
	.export		_line_draw_tool
	.export		_set_colour
	.export		_eye_dropper_tool
	.export		_handle_key_command
	.export		_icon_x
	.export		_icon_y
	.export		_get_sprite_position
	.export		_palette_selection_handler

.segment	"DATA"

_mouse_addrs:
	.dword	$00013200
	.dword	$00013200
	.dword	$00013200
	.dword	$00013200
	.dword	$00013300
	.dword	$00013200
	.dword	$00013200
	.dword	$00013200
_was_drawing_last_frame:
	.byte	$00
_old_pix_x:
	.byte	$00
_old_pix_y:
	.byte	$00
_old_button:
	.byte	$00
_brush_size:
	.byte	$04
_fill_offset_arr_x:
	.byte	$01
	.byte	$ff
	.byte	$ff
	.byte	$01
_fill_offset_arr_y:
	.byte	$00
	.byte	$01
	.byte	$ff
	.byte	$ff
_flood_fill_queue_x:
	.byte	$00
	.res	255,$00
_flood_fill_queue_y:
	.byte	$00
	.res	255,$00
_queue_length:
	.byte	$00
_abort_flood_fill:
	.byte	$00
_line_brush_size:
	.byte	$02
_point_selected:
	.byte	$00
_icon_x:
	.word	$0000
_icon_y:
	.word	$0000

.segment	"BSS"

_brush_type:
	.res	1,$00
_selection_colour:
	.res	1,$00
_fill_colour:
	.res	1,$00
_line_brush_type:
	.res	1,$00
_previous_point_x:
	.res	1,$00
_previous_point_y:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ draw_pixel_to_sprite (unsigned char pix_x, unsigned char pix_y, unsigned char mouse_buttons)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_pixel_to_sprite: near

.segment	"CODE"

	jsr     pusha
	jsr     decsp1
	ldy     #$01
	lda     (sp),y
	and     #$01
	beq     L0007
	lda     __primary_colour
	bra     L0008
L0007:	lda     __secondary_colour
L0008:	sta     (sp)
	ldy     #$03
	lda     (sp),y
	jsr     pusha
	ldy     #$03
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	lda     _brush_size
	jsr     pusha
	lda     _brush_type
	jsr     _draw_brush_to_sprite
	lda     _was_drawing_last_frame
	beq     L0004
	lda     _old_pix_x
	jsr     pusha
	lda     _old_pix_y
	jsr     pusha
	ldy     #$05
	lda     (sp),y
	jsr     pusha
	ldy     #$05
	lda     (sp),y
	jsr     pusha
	ldy     #$04
	lda     (sp),y
	jsr     pusha
	lda     _brush_size
	jsr     pusha
	lda     _brush_type
	jsr     _draw_pixel_line
	bra     L0005
L0004:	ldy     #$03
	lda     (sp),y
	jsr     pusha
	ldy     #$03
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	lda     _brush_size
	jsr     pusha
	lda     _brush_type
	jsr     _draw_brush_to_sprite
L0005:	jsr     __draw_canvas_to_screen
	lda     #$01
	sta     _was_drawing_last_frame
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ draw_pixel_line (unsigned char x0, unsigned char y0, unsigned char x1, unsigned char y1, unsigned char col, unsigned char brush_size, unsigned char brush_type)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_pixel_line: near

.segment	"CODE"

	jsr     pusha
	jsr     decsp2
	ldy     #$08
	lda     (sp),y
	ldy     #$06
	cmp     (sp),y
	bcc     L000B
	beq     L000B
	ldy     #$08
	lda     (sp),y
	sec
	ldy     #$06
	bra     L0010
L000B:	lda     (sp),y
	sec
	ldy     #$08
L0010:	sbc     (sp),y
	ldy     #$01
	sta     (sp),y
	ldy     #$07
	lda     (sp),y
	ldy     #$05
	cmp     (sp),y
	bcc     L000D
	beq     L000D
	ldy     #$07
	lda     (sp),y
	sec
	ldy     #$05
	bra     L0011
L000D:	lda     (sp),y
	sec
	ldy     #$07
L0011:	sbc     (sp),y
	sta     (sp)
	ldy     #$01
	lda     (sp),y
	cmp     (sp)
	bcc     L0006
	beq     L0006
	ldy     #$08
	lda     (sp),y
	jsr     pusha
	ldy     #$08
	lda     (sp),y
	jsr     pusha
	ldy     #$08
	lda     (sp),y
	jsr     pusha
	ldy     #$08
	lda     (sp),y
	jsr     pusha
	ldy     #$08
	lda     (sp),y
	jsr     pusha
	ldy     #$08
	lda     (sp),y
	jsr     pusha
	ldy     #$08
	lda     (sp),y
	jsr     _draw_pixel_line_h
	bra     L0007
L0006:	ldy     #$08
	lda     (sp),y
	jsr     pusha
	ldy     #$08
	lda     (sp),y
	jsr     pusha
	ldy     #$08
	lda     (sp),y
	jsr     pusha
	ldy     #$08
	lda     (sp),y
	jsr     pusha
	ldy     #$08
	lda     (sp),y
	jsr     pusha
	ldy     #$08
	lda     (sp),y
	jsr     pusha
	ldy     #$08
	lda     (sp),y
	jsr     _draw_pixel_line_v
L0007:	ldy     #$09
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ tool_handler (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_tool_handler: near

.segment	"CODE"

	lda     __mouse_data
	ldx     __mouse_data+1
	jsr     pushax
	lda     __mouse_data+2
	ldx     __mouse_data+2+1
	jsr     pushax
	jsr     decsp2
	lda     __mouse_data+4
	jsr     pusha
	jsr     _handle_key_command
	ldy     #$06
	jsr     ldaxysp
	cmp     #$60
	txa
	sbc     #$00
	bcc     L0002
	ldy     #$06
	lda     (sp),y
	cmp     #$00
	bne     L0004
	dey
	lda     (sp),y
	cmp     #$E0
L0004:	bcs     L0002
	ldy     #$04
	jsr     ldaxysp
	cmp     #$28
	txa
	sbc     #$00
	bcc     L0002
	ldy     #$04
	lda     (sp),y
	cmp     #$00
	bne     L0005
	dey
	lda     (sp),y
	cmp     #$A8
L0005:	bcs     L0002
	ldx     #$00
	lda     __current_tool
	jsr     aslax2
	clc
	adc     #<(_mouse_addrs)
	tay
	txa
	adc     #>(_mouse_addrs)
	tax
	tya
	jsr     ldeaxi
	jsr     shreax4
	jsr     shreax1
	jsr     pusheax
	lda     #$00
	ldx     #$80
	jsr     tosadd0ax
	bra     L003A
L0002:	ldx     #$89
	lda     #$80
L003A:	jsr     pushax
	lda     #$00
	jsr     __set_sprite_address
	lda     (sp)
	and     #$01
	bne     L002A
	lda     (sp)
	and     #$02
	jeq     L0009
L002A:	ldy     #$06
	jsr     ldaxysp
	cmp     #$60
	txa
	sbc     #$00
	jcc     L000C
	ldy     #$06
	lda     (sp),y
	cmp     #$00
	bne     L000E
	dey
	lda     (sp),y
	cmp     #$E0
L000E:	jcs     L000C
	ldy     #$04
	jsr     ldaxysp
	cmp     #$28
	txa
	sbc     #$00
	jcc     L000C
	ldy     #$04
	lda     (sp),y
	cmp     #$00
	bne     L000F
	dey
	lda     (sp),y
	cmp     #$A8
L000F:	jcs     L000C
	ldx     #$00
	lda     #$60
	ldy     #$05
	jsr     subeqysp
	ldx     #$00
	lda     #$28
	ldy     #$03
	jsr     subeqysp
	ldy     #$06
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	lda     #$04
	sec
	sbc     __canvas_pow_scale
	tay
	lda     ptr1
	ldx     ptr1+1
	jsr     shraxy
	ldy     #$02
	sta     (sp),y
	ldy     #$04
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	lda     #$04
	sec
	sbc     __canvas_pow_scale
	tay
	lda     ptr1
	ldx     ptr1+1
	jsr     shraxy
	ldy     #$01
	sta     (sp),y
	lda     _old_pix_x
	iny
	cmp     (sp),y
	bne     L002E
	lda     _old_pix_y
	dey
	cmp     (sp),y
	bne     L002E
	lda     _old_button
	cmp     (sp)
	beq     L001B
L002E:	lda     __current_tool
	bne     L002F
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     _draw_pixel_to_sprite
	bra     L001B
L002F:	lda     __current_tool
	cmp     #$01
	bne     L0030
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     _flood_fill
	bra     L001B
L0030:	lda     __current_tool
	cmp     #$03
	bne     L0031
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     _line_draw_tool
	bra     L001B
L0031:	lda     __current_tool
	cmp     #$04
	bne     L001B
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     _eye_dropper_tool
L001B:	ldy     #$02
	lda     (sp),y
	sta     _old_pix_x
	dey
	lda     (sp),y
	sta     _old_pix_y
	bra     L0024
L000C:	lda     _was_drawing_last_frame
	beq     L0033
	jsr     _add_new_history_node
L0033:	stz     _was_drawing_last_frame
	ldy     #$06
	jsr     ldaxysp
	cmp     #$F8
	txa
	sbc     #$00
	bcc     L0024
	ldy     #$06
	lda     (sp),y
	cmp     #$01
	bne     L0020
	dey
	lda     (sp),y
	cmp     #$38
L0020:	bcs     L0024
	ldy     #$04
	jsr     ldaxysp
	cmp     #$60
	txa
	sbc     #$00
	bcc     L0024
	ldy     #$04
	lda     (sp),y
	cmp     #$00
	bne     L0021
	dey
	lda     (sp),y
	cmp     #$C0
L0021:	bcs     L0024
	ldy     #$08
	jsr     pushwysp
	ldy     #$08
	jsr     pushwysp
	ldy     #$04
	lda     (sp),y
	jsr     _palette_selection_handler
	bra     L0024
L0009:	lda     _was_drawing_last_frame
	beq     L0038
	jsr     _add_new_history_node
L0038:	stz     _was_drawing_last_frame
L0024:	lda     (sp)
	sta     _old_button
	jmp     incsp7

.endproc

; ---------------------------------------------------------------
; void __near__ set_pal_icon_sprites (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_set_pal_icon_sprites: near

.segment	"CODE"

	lda     __primary_colour
	jsr     _get_sprite_position
	lda     #$05
	jsr     pusha
	lda     #$59
	jsr     pusha0
	lda     #$00
	jsr     pusha
	lda     _icon_x
	ldx     _icon_x+1
	jsr     pushax
	lda     _icon_y
	ldx     _icon_y+1
	jsr     pushax
	lda     #$0C
	jsr     pusha
	lda     #$00
	jsr     pusha
	lda     #$0F
	jsr     __set_sprite_attribute
	lda     __secondary_colour
	jsr     _get_sprite_position
	ldx     #$00
	lda     $0060
	jsr     decax8
	clc
	adc     _icon_x
	sta     _icon_x
	txa
	adc     _icon_x+1
	sta     _icon_x+1
	ldx     #$00
	lda     $0061
	jsr     decax8
	clc
	adc     _icon_y
	sta     _icon_y
	txa
	adc     _icon_y+1
	sta     _icon_y+1
	lda     #$06
	jsr     pusha
	lda     #$5A
	jsr     pusha0
	lda     #$00
	jsr     pusha
	lda     _icon_x
	ldx     _icon_x+1
	jsr     pushax
	lda     _icon_y
	ldx     _icon_y+1
	jsr     pushax
	lda     #$0C
	jsr     pusha
	lda     #$00
	jsr     pusha
	lda     #$0F
	jmp     __set_sprite_attribute

.endproc

; ---------------------------------------------------------------
; void __near__ draw_pixel_line_h (unsigned char x0, unsigned char y0, unsigned char x1, unsigned char y1, unsigned char col, unsigned char brush_size, unsigned char brush_type)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_pixel_line_h: near

.segment	"CODE"

	jsr     pusha
	jsr     decsp4
	lda     #$00
	jsr     pusha
	jsr     decsp2
	ldy     #$0D
	lda     (sp),y
	ldy     #$0B
	cmp     (sp),y
	bcc     L0013
	beq     L0013
	ldy     #$0D
	lda     (sp),y
	jsr     pusha
	ldy     #$0C
	lda     (sp),y
	ldy     #$0E
	sta     (sp),y
	lda     (sp)
	ldy     #$0C
	sta     (sp),y
	iny
	lda     (sp),y
	sta     (sp)
	ldy     #$0B
	lda     (sp),y
	ldy     #$0D
	sta     (sp),y
	lda     (sp)
	ldy     #$0B
	sta     (sp),y
	jsr     incsp1
L0013:	lda     (sp),y
	sec
	ldy     #$0D
	sbc     (sp),y
	ldy     #$06
	sta     (sp),y
	ldy     #$0A
	lda     (sp),y
	sec
	ldy     #$0C
	sbc     (sp),y
	ldy     #$05
	sta     (sp),y
	ldy     #$0C
	lda     (sp),y
	ldy     #$0A
	cmp     (sp),y
	bcc     L0003
	beq     L0003
	lda     #$01
	ldy     #$02
	sta     (sp),y
	ldy     #$0C
	lda     (sp),y
	sec
	ldy     #$0A
	sbc     (sp),y
	ldy     #$05
	sta     (sp),y
L0003:	ldy     #$05
	ldx     #$00
	lda     (sp),y
	asl     a
	bcc     L000C
	inx
L000C:	sec
	iny
	sbc     (sp),y
	pha
	txa
	sbc     #$00
	tax
	pla
	ldy     #$03
	jsr     staxysp
	ldy     #$0D
	lda     (sp),y
	sta     (sp)
	dey
	lda     (sp),y
	ldy     #$01
	sta     (sp),y
	ldy     #$0D
	lda     (sp),y
L0010:	sta     (sp)
	ldy     #$0B
	cmp     (sp),y
	beq     L0011
	bcs     L0005
L0011:	lda     (sp)
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$0B
	lda     (sp),y
	jsr     pusha
	ldy     #$0B
	lda     (sp),y
	jsr     pusha
	ldy     #$0B
	lda     (sp),y
	jsr     _draw_brush_to_sprite
	ldy     #$04
	jsr     ldaxysp
	cmp     #$01
	txa
	sbc     #$00
	bvs     L0009
	eor     #$80
L0009:	bpl     L0008
	ldy     #$02
	lda     (sp),y
	beq     L000A
	dey
	lda     (sp),y
	sec
	sbc     #$01
	bra     L000F
L000A:	dey
	clc
	tya
	adc     (sp),y
L000F:	sta     (sp),y
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	asl     a
	bcc     L000D
	inx
L000D:	ldy     #$03
	jsr     subeqysp
L0008:	ldy     #$05
	ldx     #$00
	lda     (sp),y
	asl     a
	bcc     L000E
	inx
L000E:	ldy     #$03
	jsr     addeqysp
	clc
	lda     #$01
	adc     (sp)
	bra     L0010
L0005:	ldy     #$0E
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ draw_pixel_line_v (unsigned char x0, unsigned char y0, unsigned char x1, unsigned char y1, unsigned char col, unsigned char brush_size, unsigned char brush_type)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_pixel_line_v: near

.segment	"CODE"

	jsr     pusha
	jsr     decsp4
	lda     #$00
	jsr     pusha
	jsr     decsp2
	ldy     #$0C
	lda     (sp),y
	ldy     #$0A
	cmp     (sp),y
	bcc     L0002
	beq     L0002
	ldy     #$0D
	lda     (sp),y
	jsr     pusha
	ldy     #$0C
	lda     (sp),y
	ldy     #$0E
	sta     (sp),y
	lda     (sp)
	ldy     #$0C
	sta     (sp),y
	iny
	lda     (sp),y
	sta     (sp)
	ldy     #$0B
	lda     (sp),y
	ldy     #$0D
	sta     (sp),y
	lda     (sp)
	ldy     #$0B
	sta     (sp),y
	jsr     incsp1
L0002:	ldy     #$0B
	lda     (sp),y
	sec
	ldy     #$0D
	sbc     (sp),y
	ldy     #$06
	sta     (sp),y
	ldy     #$0A
	lda     (sp),y
	sec
	ldy     #$0C
	sbc     (sp),y
	ldy     #$05
	sta     (sp),y
	ldy     #$0D
	lda     (sp),y
	ldy     #$0B
	cmp     (sp),y
	bcc     L0003
	beq     L0003
	lda     #$01
	ldy     #$02
	sta     (sp),y
	ldy     #$0D
	lda     (sp),y
	sec
	ldy     #$0B
	sbc     (sp),y
	ldy     #$06
	sta     (sp),y
L0003:	ldy     #$06
	ldx     #$00
	lda     (sp),y
	asl     a
	bcc     L000C
	inx
L000C:	sec
	dey
	sbc     (sp),y
	pha
	txa
	sbc     #$00
	tax
	pla
	ldy     #$03
	jsr     staxysp
	ldy     #$0D
	lda     (sp),y
	sta     (sp)
	dey
	lda     (sp),y
	ldy     #$01
	sta     (sp),y
	ldy     #$0C
	lda     (sp),y
	ldy     #$01
L0010:	sta     (sp),y
	ldy     #$0A
	cmp     (sp),y
	beq     L0011
	bcs     L0005
L0011:	lda     (sp)
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$0B
	lda     (sp),y
	jsr     pusha
	ldy     #$0B
	lda     (sp),y
	jsr     pusha
	ldy     #$0B
	lda     (sp),y
	jsr     _draw_brush_to_sprite
	ldy     #$04
	jsr     ldaxysp
	cmp     #$01
	txa
	sbc     #$00
	bvs     L0009
	eor     #$80
L0009:	bpl     L0008
	ldy     #$02
	lda     (sp),y
	beq     L000A
	lda     (sp)
	sec
	sbc     #$01
	bra     L000F
L000A:	clc
	ina
	adc     (sp)
L000F:	sta     (sp)
	ldy     #$05
	ldx     #$00
	lda     (sp),y
	asl     a
	bcc     L000D
	inx
L000D:	ldy     #$03
	jsr     subeqysp
L0008:	ldy     #$06
	ldx     #$00
	lda     (sp),y
	asl     a
	bcc     L000E
	inx
L000E:	ldy     #$03
	jsr     addeqysp
	ldy     #$01
	clc
	tya
	adc     (sp),y
	bra     L0010
L0005:	ldy     #$0E
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ flood_fill_pixel (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_flood_fill_pixel: near

.segment	"CODE"

	jsr     decsp1
	lda     #<(_flood_fill_queue_x)
	ldx     #>(_flood_fill_queue_x)
	clc
	adc     _queue_length
	bcc     L0002
	inx
L0002:	ldy     #$00
	jsr     ldaidx
	jsr     pusha
	lda     #<(_flood_fill_queue_y)
	ldx     #>(_flood_fill_queue_y)
	clc
	adc     _queue_length
	bcc     L0003
	inx
L0003:	ldy     #$00
	jsr     ldaidx
	jsr     pusha
	jsr     decsp1
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	lda     _fill_colour
	jsr     _add_history_node_position
	lda     _fill_colour
	jsr     pusha
	lda     #$01
	jsr     pusha
	ldy     #$04
	lda     (sp),y
	jsr     pusha
	ldy     #$04
	lda     (sp),y
	jsr     __draw_row_to_sprite
	lda     #$00
	ldy     #$03
L001C:	sta     (sp),y
	cmp     #$04
	jcs     L0005
	lda     #<(_fill_offset_arr_x)
	ldx     #>(_fill_offset_arr_x)
	clc
	adc     (sp),y
	bcc     L0008
	inx
L0008:	ldy     #$00
	jsr     ldaidx
	cmp     #$80
	ldy     #$02
	clc
	adc     (sp),y
	sta     (sp),y
	lda     #<(_fill_offset_arr_y)
	ldx     #>(_fill_offset_arr_y)
	iny
	clc
	adc     (sp),y
	bcc     L000B
	inx
L000B:	ldy     #$00
	jsr     ldaidx
	cmp     #$80
	iny
	clc
	adc     (sp),y
	sta     (sp),y
	iny
	lda     (sp),y
	tax
	jmi     L0006
	ldx     #$00
	lda     (sp),y
	bpl     L0011
	dex
L0011:	jsr     pushax
	lda     _bmx_width
	ldx     _bmx_width+1
	jsr     ldaxi
	jsr     tosicmp
	bcs     L0006
	ldy     #$01
	lda     (sp),y
	tax
	bmi     L0006
	ldx     #$00
	lda     (sp),y
	bpl     L0013
	dex
L0013:	jsr     pushax
	lda     _bmx_height
	ldx     _bmx_height+1
	jsr     ldaxi
	jsr     tosicmp
	bcs     L0006
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     __get_pixel
	sta     (sp)
	cmp     _selection_colour
	bne     L0006
	lda     #<(_flood_fill_queue_x)
	ldx     #>(_flood_fill_queue_x)
	clc
	adc     _queue_length
	bcc     L0017
	inx
L0017:	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (sp),y
	sta     (ptr1)
	lda     #<(_flood_fill_queue_y)
	ldx     #>(_flood_fill_queue_y)
	clc
	adc     _queue_length
	bcc     L0019
	inx
L0019:	sta     ptr1
	stx     ptr1+1
	dey
	lda     (sp),y
	sta     (ptr1)
	inc     _queue_length
	lda     _queue_length
	cmp     #$FF
	bne     L0006
	sty     _abort_flood_fill
L0006:	ldy     #$03
	clc
	lda     #$01
	adc     (sp),y
	jmp     L001C
L0005:	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ flood_fill (unsigned char pix_x, unsigned char pix_y, unsigned char mouse_buttons)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_flood_fill: near

.segment	"CODE"

	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     __get_pixel
	sta     _selection_colour
	stz     _queue_length
	lda     (sp)
	and     #$01
	beq     L000E
	lda     __primary_colour
	bra     L000D
L000E:	lda     __secondary_colour
L000D:	sta     _fill_colour
	cmp     _selection_colour
	beq     L0001
	lda     #<(_flood_fill_queue_x)
	ldx     #>(_flood_fill_queue_x)
	clc
	adc     _queue_length
	bcc     L0005
	inx
L0005:	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (sp),y
	sta     (ptr1)
	lda     #<(_flood_fill_queue_y)
	ldx     #>(_flood_fill_queue_y)
	clc
	adc     _queue_length
	bcc     L0007
	inx
L0007:	sta     ptr1
	stx     ptr1+1
	dey
	lda     (sp),y
	sta     (ptr1)
	inc     _queue_length
	bra     L0010
L000F:	dec     _queue_length
	jsr     _flood_fill_pixel
	lda     _abort_flood_fill
	beq     L0010
	stz     _abort_flood_fill
	bra     L000A
L0010:	lda     _queue_length
	bne     L000F
L000A:	jsr     _add_new_history_node
	jsr     __draw_canvas_to_screen
L0001:	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; void __near__ line_draw_tool (unsigned char pix_x, unsigned char pix_y, unsigned char mouse_buttons)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_line_draw_tool: near

.segment	"CODE"

	jsr     pusha
	jsr     decsp1
	ldy     #$01
	lda     (sp),y
	and     #$01
	beq     L0007
	lda     __primary_colour
	bra     L0009
L0007:	lda     __secondary_colour
L0009:	sta     (sp)
	lda     _point_selected
	bne     L0008
	sty     _point_selected
	ldy     #$03
	lda     (sp),y
	sta     _previous_point_x
	dey
	lda     (sp),y
	sta     _previous_point_y
	jmp     incsp4
L0008:	stz     _point_selected
	lda     _previous_point_x
	jsr     pusha
	lda     _previous_point_y
	jsr     pusha
	ldy     #$05
	lda     (sp),y
	jsr     pusha
	ldy     #$05
	lda     (sp),y
	jsr     pusha
	ldy     #$04
	lda     (sp),y
	jsr     pusha
	lda     _line_brush_size
	jsr     pusha
	lda     _line_brush_type
	jsr     _draw_pixel_line
	jsr     _add_new_history_node
	jsr     __draw_canvas_to_screen
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ set_colour (unsigned char *addr, unsigned char new_col)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_set_colour: near

.segment	"CODE"

	jsr     pusha
	ldy     #$02
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (sp)
	sta     (ptr1)
	jsr     _set_pal_icon_sprites
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; void __near__ eye_dropper_tool (unsigned char pix_x, unsigned char pix_y, unsigned char mouse_buttons)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_eye_dropper_tool: near

.segment	"CODE"

	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     __get_pixel
	jsr     pusha
	ldy     #$01
	lda     (sp),y
	and     #$01
	beq     L0002
	lda     #<(__primary_colour)
	ldx     #>(__primary_colour)
	bra     L0007
L0002:	lda     #<(__secondary_colour)
	ldx     #>(__secondary_colour)
L0007:	jsr     pushax
	ldy     #$02
	lda     (sp),y
	jsr     _set_colour
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ handle_key_command (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_handle_key_command: near

.segment	"CODE"

	lda     __current_tool
	cmp     #$03
	bne     L0003
	lda     _keycode
	cmp     #$1B
	bne     L0003
	stz     _point_selected
L0003:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ get_sprite_position (unsigned char colour)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_get_sprite_position: near

.segment	"CODE"

	jsr     pusha
	lda     (sp)
	jsr     pusha0
	lda     $0059
	jsr     tosumoda0
	jsr     pushax
	lda     $0060
	jsr     tosmula0
	sta     _icon_x
	stx     _icon_x+1
	lda     (sp)
	jsr     pusha0
	lda     $0059
	jsr     tosudiva0
	jsr     pushax
	lda     $0061
	jsr     tosmula0
	sta     _icon_y
	stx     _icon_y+1
	lda     #$F8
	clc
	adc     _icon_x
	sta     _icon_x
	bcc     L0002
	inc     _icon_x+1
L0002:	lda     #$60
	clc
	adc     _icon_y
	sta     _icon_y
	bcc     L0003
	inc     _icon_y+1
L0003:	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ palette_selection_handler (unsigned int mouse_x, unsigned int mouse_y, unsigned char mouse_buttons)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_palette_selection_handler: near

.segment	"CODE"

	jsr     pusha
	ldy     #$04
	jsr     ldaxysp
	ldy     #$F8
	jsr     decaxy
	jsr     pushax
	lda     $0060
	jsr     tosudiva0
	jsr     pusha
	ldy     #$03
	jsr     ldaxysp
	ldy     #$60
	jsr     decaxy
	jsr     pushax
	lda     $0061
	jsr     tosudiva0
	jsr     pusha
	ldy     #$01
	lda     (sp),y
	jsr     pusha0
	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     $0059
	jsr     tosumula0
	jsr     tosaddax
	jsr     pusha
	lda     _bmx_no_pals+1
	sta     ptr1+1
	lda     _bmx_no_pals
	sta     ptr1
	lda     (ptr1)
	cmp     (sp)
	bcc     L0004
	beq     L0004
	ldy     #$03
	lda     (sp),y
	and     #$01
	beq     L0003
	lda     #<(__primary_colour)
	ldx     #>(__primary_colour)
	bra     L0008
L0003:	lda     #<(__secondary_colour)
	ldx     #>(__secondary_colour)
L0008:	jsr     pushax
	ldy     #$02
	lda     (sp),y
	jsr     _set_colour
L0004:	jmp     incsp8

.endproc

