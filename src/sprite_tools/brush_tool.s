;
; File generated by cc65 v 2.19 - Git 5c3ff71
;
	.fopt		compiler,"cc65 v 2.19 - Git 5c3ff71"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.export		_draw_brush_to_sprite
	.import		__draw_row_to_sprite
	.import		_add_history_node_row
	.export		_row_widths
	.export		_brush_ptrs

.segment	"DATA"

_row_widths:
	.byte	$01
	.byte	$01
	.byte	$02
	.byte	$02
	.byte	$03
	.byte	$03
	.byte	$02
	.byte	$03
	.byte	$04
	.byte	$04
	.byte	$02
	.byte	$03
	.byte	$04
	.byte	$05
	.byte	$05
	.byte	$03
	.byte	$04
	.byte	$05
	.byte	$06
	.byte	$06
	.byte	$06
	.byte	$03
	.byte	$04
	.byte	$05
	.byte	$06
	.byte	$07
	.byte	$07
	.byte	$07
	.byte	$03
	.byte	$05
	.byte	$06
	.byte	$07
	.byte	$07
	.byte	$08
	.byte	$08
	.byte	$08
	.byte	$03
	.byte	$05
	.byte	$06
	.byte	$07
	.byte	$08
	.byte	$08
	.byte	$09
	.byte	$09
	.byte	$09
	.byte	$03
	.byte	$05
	.byte	$06
	.byte	$07
	.byte	$08
	.byte	$09
	.byte	$09
	.byte	$0a
	.byte	$0a
	.byte	$0a
	.byte	$04
	.byte	$06
	.byte	$07
	.byte	$08
	.byte	$09
	.byte	$0a
	.byte	$0a
	.byte	$0b
	.byte	$0b
	.byte	$0b
	.byte	$0b
	.byte	$04
	.byte	$06
	.byte	$07
	.byte	$08
	.byte	$09
	.byte	$0a
	.byte	$0b
	.byte	$0b
	.byte	$0c
	.byte	$0c
	.byte	$0c
	.byte	$0c
	.byte	$04
	.byte	$06
	.byte	$08
	.byte	$09
	.byte	$0a
	.byte	$0b
	.byte	$0b
	.byte	$0c
	.byte	$0c
	.byte	$0d
	.byte	$0d
	.byte	$0d
	.byte	$0d
	.byte	$04
	.byte	$07
	.byte	$08
	.byte	$09
	.byte	$0a
	.byte	$0b
	.byte	$0c
	.byte	$0d
	.byte	$0d
	.byte	$0d
	.byte	$0e
	.byte	$0e
	.byte	$0e
	.byte	$0e
	.byte	$04
	.byte	$07
	.byte	$09
	.byte	$0a
	.byte	$0b
	.byte	$0c
	.byte	$0d
	.byte	$0d
	.byte	$0e
	.byte	$0e
	.byte	$0e
	.byte	$0f
	.byte	$0f
	.byte	$0f
	.byte	$0f
	.byte	$04
	.byte	$07
	.byte	$09
	.byte	$0a
	.byte	$0b
	.byte	$0c
	.byte	$0d
	.byte	$0e
	.byte	$0e
	.byte	$0f
	.byte	$0f
	.byte	$0f
	.byte	$10
	.byte	$10
	.byte	$10
	.byte	$10
_brush_ptrs:
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$03
	.byte	$06
	.byte	$0a
	.byte	$0f
	.byte	$15
	.byte	$1c
	.byte	$24
	.byte	$2d
	.byte	$37
	.byte	$42
	.byte	$4e
	.byte	$5b
	.byte	$69
	.byte	$78

; ---------------------------------------------------------------
; void __near__ draw_brush_to_sprite (unsigned char x, unsigned char y, unsigned char colour, unsigned char brush_size, unsigned char brush_type)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_draw_brush_to_sprite: near

.segment	"CODE"

	jsr     pusha
	ldy     #$01
	lda     (sp),y
	lsr     a
	jsr     pusha
	lda     (sp)
	tay
	lda     _brush_ptrs,y
	jsr     pusha
	jsr     decsp3
	lda     #$00
	ldy     #$01
L000C:	sta     (sp),y
	ldy     #$04
	cmp     (sp),y
	jcs     L0004
	dey
	lda     (sp),y
	tay
	lda     _row_widths,y
	ldy     #$02
	sta     (sp),y
	iny
	clc
	lda     #$01
	adc     (sp),y
	sta     (sp),y
	dey
	lda     (sp),y
	asl     a
	jsr     pusha
	ldy     #$0A
	lda     (sp),y
	sec
	ldy     #$03
	sbc     (sp),y
	jsr     pusha
	ldy     #$03
	lda     (sp),y
	clc
	ldy     #$0A
	adc     (sp),y
	sec
	ldy     #$06
	sbc     (sp),y
	jsr     pusha
	ldy     #$0A
	lda     (sp),y
	jsr     _add_history_node_row
	ldy     #$02
	lda     (sp),y
	asl     a
	jsr     pusha
	ldy     #$0A
	lda     (sp),y
	sec
	ldy     #$03
	sbc     (sp),y
	jsr     pusha
	ldy     #$06
	lda     (sp),y
	clc
	ldy     #$0A
	adc     (sp),y
	sec
	ldy     #$03
	sbc     (sp),y
	sec
	sbc     #$01
	jsr     pusha
	ldy     #$0A
	lda     (sp),y
	jsr     _add_history_node_row
	ldy     #$07
	lda     (sp),y
	jsr     pusha
	ldy     #$03
	lda     (sp),y
	asl     a
	jsr     pusha
	ldy     #$0B
	lda     (sp),y
	sec
	ldy     #$04
	sbc     (sp),y
	jsr     pusha
	ldy     #$04
	lda     (sp),y
	clc
	ldy     #$0B
	adc     (sp),y
	sec
	ldy     #$07
	sbc     (sp),y
	jsr     __draw_row_to_sprite
	ldy     #$07
	lda     (sp),y
	jsr     pusha
	ldy     #$03
	lda     (sp),y
	asl     a
	jsr     pusha
	ldy     #$0B
	lda     (sp),y
	sec
	ldy     #$04
	sbc     (sp),y
	jsr     pusha
	ldy     #$07
	lda     (sp),y
	clc
	ldy     #$0B
	adc     (sp),y
	sec
	ldy     #$04
	sbc     (sp),y
	sec
	sbc     #$01
	jsr     __draw_row_to_sprite
	ldy     #$01
	clc
	tya
	adc     (sp),y
	jmp     L000C
L0004:	ldy     #$0A
	jmp     addysp

.endproc

