;
; File generated by cc65 v 2.19 - Git 5c3ff71
;
	.fopt		compiler,"cc65 v 2.19 - Git 5c3ff71"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		__add_history_node_position
	.import		__get_history_byte
	.import		__get_history_redo_byte
	.export		_add_history_node_position
	.export		_add_new_history_node
	.export		_restore_last_history_node
	.export		_undo_last_history_node
	.import		__draw_canvas_to_screen
	.import		__draw_row_to_sprite
	.export		_node_start_pos
	.export		_starting_new_node
	.export		_last_x
	.export		_last_y
	.export		_length_counter
	.export		_curr_col

.segment	"DATA"

_starting_new_node:
	.byte	$01
_last_x:
	.byte	$00
_last_y:
	.byte	$00
_length_counter:
	.byte	$00

.segment	"BSS"

_node_start_pos:
	.res	2,$00
_curr_col:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ add_history_node_position (unsigned char x, unsigned char y, unsigned char colour)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_add_history_node_position: near

.segment	"CODE"

	jsr     pusha
	lda     _last_x
	ldy     #$02
	cmp     (sp),y
	bne     L0008
	lda     _last_y
	dey
	cmp     (sp),y
	beq     L0002
L0008:	lda     _length_counter
	cmp     #$FF
	bne     L0005
	jsr     _add_new_history_node
L0005:	lda     _starting_new_node
	beq     L0006
	lda     (sp)
	sta     _curr_col
	lda     $0056+1
	sta     _node_start_pos+1
	lda     $0056
	sta     _node_start_pos
	stz     _starting_new_node
	lda     #$02
	clc
	adc     $0056
	sta     $0056
	bcc     L0007
	inc     $0056+1
L0007:	stz     _length_counter
L0006:	ldy     #$02
	lda     (sp),y
	sta     _last_x
	dey
	lda     (sp),y
	sta     _last_y
	inc     _length_counter
	iny
	lda     (sp),y
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     __add_history_node_position
L0002:	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; void __near__ add_new_history_node (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_add_new_history_node: near

.segment	"CODE"

	lda     $0056
	ldx     $0056+1
	jsr     pushax
	jsr     ldax0sp
	sta     ptr1
	stx     ptr1+1
	lda     _length_counter
	sta     (ptr1)
	lda     _node_start_pos
	ldx     _node_start_pos+1
	jsr     stax0sp
	sta     ptr1
	stx     ptr1+1
	lda     _length_counter
	sta     (ptr1)
	ldx     #$00
	lda     #$01
	jsr     addeq0sp
	jsr     ldax0sp
	sta     ptr1
	stx     ptr1+1
	lda     _curr_col
	sta     (ptr1)
	inc     $0056
	bne     L0002
	inc     $0056+1
L0002:	stz     _length_counter
	lda     #$01
	sta     _starting_new_node
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ restore_last_history_node (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_restore_last_history_node: near

.segment	"CODE"

	lda     $0056
	sec
	sbc     _node_start_pos
	sta     tmp1
	lda     $0056+1
	sbc     _node_start_pos+1
	ora     tmp1
	beq     L0008
	bcs     L0002
L0008:	jsr     __get_history_redo_byte
	jsr     pusha
	jsr     __get_history_redo_byte
	jsr     pusha
	jsr     decsp1
	lda     #$00
L0007:	sta     (sp)
	ldy     #$02
	cmp     (sp),y
	bcs     L0004
	jsr     __get_history_redo_byte
	jsr     pusha
	jsr     __get_history_redo_byte
	jsr     pusha
	jsr     __get_history_redo_byte
	jsr     pusha
	ldy     #$04
	lda     (sp),y
	jsr     pusha
	lda     #$01
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	ldy     #$04
	lda     (sp),y
	jsr     __draw_row_to_sprite
	jsr     incsp3
	clc
	lda     #$01
	adc     (sp)
	bra     L0007
L0004:	jsr     __get_history_redo_byte
	jsr     __draw_canvas_to_screen
	jmp     incsp3
L0002:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ undo_last_history_node (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_undo_last_history_node: near

.segment	"CODE"

	lda     $0056
	cmp     #$01
	lda     $0056+1
	sbc     #$A0
	bcc     L0002
	lda     #$00
	jsr     pusha
	jsr     __get_history_byte
	jsr     pusha
	lda     #$00
	ldy     #$01
L0007:	sta     (sp),y
	cmp     (sp)
	bcs     L0004
	jsr     __get_history_byte
	jsr     pusha
	jsr     __get_history_byte
	jsr     pusha
	jsr     __get_history_byte
	jsr     pusha
	lda     (sp)
	jsr     pusha
	lda     #$01
	jsr     pusha
	ldy     #$04
	lda     (sp),y
	jsr     pusha
	ldy     #$04
	lda     (sp),y
	jsr     __draw_row_to_sprite
	jsr     incsp3
	ldy     #$01
	clc
	tya
	adc     (sp),y
	bra     L0007
L0004:	jsr     __get_history_byte
	jsr     __get_history_byte
	jsr     __draw_canvas_to_screen
	jmp     incsp2
L0002:	rts

.endproc

