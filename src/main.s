;
; File generated by cc65 v 2.19 - Git 5c3ff71
;
	.fopt		compiler,"cc65 v 2.19 - Git 5c3ff71"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_cbm_open
	.import		_cbm_close
	.import		_cbm_read
	.import		__wait_for_nmi
	.import		__init_irq_handler
	.import		__init_screen_mode
	.import		_parse_mouse_input
	.import		_get_keycode
	.import		_keycode
	.import		__initialize_mouse
	.import		__get_mouse_input
	.import		__draw_ui_element
	.import		_set_layer_config
	.import		_initialize_paint_ui
	.import		_change_tool
	.import		_bmx_vera_bit_depth
	.import		_bmx_width
	.import		_bmx_height
	.import		_bmx_no_pals
	.import		__draw_canvas_to_screen
	.import		__render_palette_sprites
	.import		__transfer_pal_to_vera
	.import		__transfer_sprite_to_vram
	.export		_handle_keyboard_input
	.import		__image_data_size
	.import		_init_canvas_vera_sprites
	.import		_restore_last_history_node
	.import		_undo_last_history_node
	.import		_tool_handler
	.import		_set_pal_icon_sprites
	.export		_filename
	.export		_load_bmx_file
	.export		_save_bmx_file
	.export		_main

.segment	"DATA"

_filename:
	.byte	$42,$52,$45,$41,$4B,$46,$41,$53,$54,$2E,$42,$4D,$58,$00

; ---------------------------------------------------------------
; void __near__ handle_keyboard_input (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_handle_keyboard_input: near

.segment	"CODE"

	lda     _keycode
	beq     L000B
	cmp     #$1A
	bne     L000C
	jmp     _undo_last_history_node
L000C:	lda     _keycode
	cmp     #$19
	bne     L000D
	jmp     _restore_last_history_node
L000D:	lda     _keycode
	cmp     #$49
	bne     L000E
	lda     #$04
	jmp     _change_tool
L000E:	lda     _keycode
	cmp     #$42
	bne     L000F
	lda     #$00
	jmp     _change_tool
L000F:	lda     _keycode
	cmp     #$53
	bne     L000B
	jmp     _save_bmx_file
L000B:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ load_bmx_file (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_load_bmx_file: near

.segment	"CODE"

	ldx     #$80
	lda     #$00
	jsr     pushax
	lda     #$02
	jsr     pusha
	lda     #$0F
	jsr     pusha
	lda     #$08
	jsr     pusha
	lda     #$02
	jsr     pusha
	lda     #<(_filename)
	ldx     #>(_filename)
	jsr     _cbm_open
	lda     #$0F
	jsr     pusha
	ldx     #$04
	lda     #$00
	jsr     pushax
	tax
	lda     #$20
	jsr     _cbm_read
	lda     #$01
	sta     $0000
	lda     _bmx_no_pals+1
	sta     ptr1+1
	lda     _bmx_no_pals
	sta     ptr1
	lda     (ptr1)
	beq     L000B
	lda     #$0F
	jsr     pusha
	ldx     #$A0
	lda     #$00
	jsr     pushax
	lda     _bmx_no_pals+1
	sta     ptr1+1
	lda     _bmx_no_pals
	sta     ptr1
	ldx     #$00
	lda     (ptr1)
	asl     a
	bcc     L000A
	inx
	bra     L000A
L000B:	lda     #$0F
	jsr     pusha
	ldx     #$A0
	lda     #$00
	jsr     pushax
	ldx     #$02
L000A:	jsr     _cbm_read
	jsr     __transfer_pal_to_vera
	lda     (sp)
	sta     $0000
	lda     _bmx_width
	ldx     _bmx_width+1
	jsr     pushw
	lda     _bmx_height
	ldx     _bmx_height+1
	jsr     ldaxi
	jsr     tosumulax
	jsr     pushax
	lda     #$03
	jsr     pusha0
	lda     _bmx_vera_bit_depth+1
	sta     ptr1+1
	lda     _bmx_vera_bit_depth
	sta     ptr1
	lda     (ptr1)
	jsr     tossuba0
	jsr     tosshrax
	sta     __image_data_size
	stx     __image_data_size+1
	bra     L0008
L000C:	lda     #$0F
	jsr     pusha
	ldx     #$A0
	lda     #$00
	jsr     pushax
	ldx     #$20
	jsr     _cbm_read
	ldx     #$20
	lda     #$00
	jsr     pushax
	ldy     #$06
	jsr     pushwysp
	lda     #$00
	jsr     __transfer_sprite_to_vram
	ldy     #$01
	ldx     #$20
	lda     #$00
	jsr     addeqysp
	clc
	lda     #$01
	adc     (sp)
	sta     (sp)
	sta     $0000
	lda     __image_data_size
	cmp     #$01
	lda     __image_data_size+1
	sbc     #$20
	bcc     L000D
	lda     __image_data_size
	sec
	sta     __image_data_size
	lda     __image_data_size+1
	sbc     #$20
	sta     __image_data_size+1
L0008:	lda     __image_data_size
	cmp     #$01
	lda     __image_data_size+1
	sbc     #$20
	bcs     L000C
L000D:	lda     #$0F
	jsr     pusha
	ldx     #$A0
	lda     #$00
	jsr     pushax
	lda     __image_data_size
	ldx     __image_data_size+1
	jsr     _cbm_read
	lda     __image_data_size
	ldx     __image_data_size+1
	jsr     pushax
	ldy     #$06
	jsr     pushwysp
	lda     #$00
	jsr     __transfer_sprite_to_vram
	lda     #$0F
	jsr     _cbm_close
	ldx     #$A0
	stz     $0056
	stx     $0056+1
	lda     #$04
	sta     $0058
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; void __near__ save_bmx_file (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_save_bmx_file: near

.segment	"CODE"

	lda     #$0F
	jsr     pusha
	lda     #$08
	jsr     pusha
	lda     #$02
	jsr     pusha
	lda     #<(_filename)
	ldx     #>(_filename)
	jsr     _cbm_open
	lda     #$0F
	jmp     _cbm_close

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	lda     #$00
	jsr     pusha
	jsr     __init_irq_handler
	jsr     __init_screen_mode
	jsr     _set_layer_config
	jsr     __initialize_mouse
	jsr     _initialize_paint_ui
	jsr     _load_bmx_file
	jsr     _init_canvas_vera_sprites
	jsr     __render_palette_sprites
	lda     #$00
	jsr     __draw_ui_element
	jsr     __draw_canvas_to_screen
	jsr     _set_pal_icon_sprites
L0002:	jsr     __wait_for_nmi
	jsr     __get_mouse_input
	jsr     _parse_mouse_input
	jsr     _get_keycode
	jsr     _handle_keyboard_input
	jsr     _tool_handler
	bra     L0002

.endproc

